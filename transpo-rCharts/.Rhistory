p <- ggplot(results, aes(x = pred, y = obs))
p <- p + geom_jitter(position = position_jitter(width = 0.25, height = 0.25))
p
png("~/Desktop/training.png", width = 1600, height = 900, res = 200)
p
dev.off()
model_resamples <- model$pred[model$pred$mtry == 6, ]
table(model_resamples$pred, model_resamples$obs)
model_resamples <- model$pred[model$pred$mtry == 6, c("pred", "obs")]
table(model_resamples)
png("~/Desktop/resampled.png", width = 1600, height = 900, res = 200)
p <- ggplot(model_resamples, aes(x = pred, y = obs))
p <- p + geom_jitter(position = position_jitter(width = 0.25, height = 0.25))
p
dev.off()
56+56+84
quit
quit()
panel1 <- expand.grid(x = c(1:3), y = 1:3)
panel2 <- panel1
panel1$base <-
panel1
panel1$act <- c(5.1, 5.1, 5.2, 5.5, 5.2, 5.4, 5.2, 5.4, 5.3)
panel1$base <- c(5.7, 6.0, 6.0, 6.1, 6.1, 6.3, 5.9, 6.1, NA)
panel1$clear <- c(8.1, 8.2, 8.3, 8.2, 8.3, 8.4, 8.3, 8.2, 8.3)
panel2 <- panel1
panel1$act <- c(5.1, 5.1, 4.8, 5.1, 5.3, 5.1, 5.1, 5.6, 5.0)
panel1$base <- c(5.5, 5.6, 5.4, 5.7, 5.7, 5.6, 5.7, 5.9, 5.8)
panel1
panel1 <- panel1[, 1:4]
panel1
panel2
panel3 <- panel2
panel3$act <- c(5.2, 5.7, 5.5, 5.9, 5.8, 5.8, 5.5, 5.7, 5.6)
panel3$base <- c(6.0, 6.5, 6.0, 6.5, 6.4, 6.4, 6.2, 6.4, 6.4)
panel3$clear <- c(7.5, 8.1, 7.7, 7.6, 7.5, 7.5, 7.3, 7.5, 7.6)
panel1$panel <- rep("panel1", nrow(panel1))
panel2$panel <- rep("panel2", nrow(panel2))
panel3$panel <- rep("panel3", nrow(panel3))
panels <- rbind(panel1, panel2, panel3)
panel1$clear <- rep(NA, nrow(panel1))
panels <- rbind(panel1, panel2, panel3)
panels
panels <- panels[, c(5, 1:4, 6)]
panels
write.table(panels, file = "~/vault/projects/research/edge-repellent/panel-painter-attempt1.csv", sep = ",", row.names = F)
library(plyr)
ddply(panels[panels$panel != "panel1", ], mutate, base_add = base - act, clear_add = clear - base)
ddply(panels[panels$panel != "panel1", ], .(panel), mutate, base_add = base - act, clear_add = clear - base)
quit()
n
library(ggplot2)
library(reshape2)
library(plyr)
library(ggplot2)
library(reshape2)
library(plyr)
data <- read.csv("~/vault/to-file/chc-ip-dataset_langer_no-abs.csv")
data <- read.csv("~/vault/to-file/chc-ip-dataset_langer_no-abs.csv")
data <- data[, -c(1:4)]
names(data)
names(data) <- c("date_exp", "corp_techs", "keywords", "tech_list", "invention_field", "invention_subject", "type")
names(data)
str(data)
data$date_exp_posix <- as.POSIXct(data$date_exp, format = "%d %b %Y")
head(data)
temp <- data[, 1]
temp
temp <- data[1, ]
temp
temp <- data[5000-, ]
temp <- data[5000, ]
temp
temp <- data[5002, ]
temp
temp <- data[4002, ]
temp
temp <- data[4202, ]
temp
temp <- data[4702, ]
temp
temp <- data[4704, ]
temp
temp <- data[4705, ]
temp
temp <- data[4706, ]
temp
str(data)
corp_techs[1:500]
data$corp_techs[1:500]
levels(data$corp_techs)
data[data$corp_techs == "Nonwovens;Wound Management;Porous Materials & Membranes", ]
data[as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes", ]
levels(data$corp_techs)
!is.na(data[as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes", ])
sum(!is.na(data[as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes", ]))
sum(as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes", ])
sum(as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes")
sum(as.character(data$corp_techs) == "Nonwovens;Wound Management;Porous Materials & Membranes", na.rm = T)
levels(data$corp_techs)[426]
data[data$corp_tech == levels(data$corp_techs)[426], ]
sum(data$corp_tech == levels(data$corp_techs)[426])
sum(data$corp_tech == levels(data$corp_techs)[426], na.rm = T)
data[as.character(data$corp_tech) == levels(data$corp_techs)[426], ]
as.character(data$corp_techs)[1:10]
as.character(data$corp_techs)[6000:6010]
unique(data$corp_techs)
data <- read.csv("~/vault/to-file/chc-ip-dataset_langer_no-abs.csv", stringsAsFactors = F)
str(data)
data <- data[, -c(1:4)]
names(data) <- c("date_exp", "corp_techs", "keywords", "tech_list", "invention_field", "invention_subject", "type")
data$date_exp_posix <- as.POSIXct(data$date_exp, format = "%d %b %Y")
head(data)
levels(data$corp_techs)
unique(data$corp_techs)
temp <- data[data$corp_techs == "Abrasives;Microreplication;Ceramics;Advanced Materials"]
temp <- data[data$corp_techs == "Abrasives;Microreplication;Ceramics;Advanced Materials", ]
head(temp)
temp <- data[data$corp_techs %in% "Abrasives;Microreplication;Ceramics;Advanced Materials", ]
head(temp)
temp$year <- strsplit(temp$date_exp, " ")[[3]]
temp$year <- strsplit(temp$date_exp, " ")[3]
temp
strsplit(temp$date_exp, " ")
strsplit(temp$date_exp, " ")[[1]][3]
data$year <- as.numeric(strsplit(data$date_exp, " ")[[1]][3]) - 20
data$year <- as.numeric(strsplit(data$date_exp, " ")[[1]][3])
head(data)
data$year <- strsplit(data$date_exp, " ")[[1]][3]
head(data)
strsplit(data[1, ]$date_exp, " ")
strsplit(data[2, ]$date_exp, " ")
strsplit(data[2, ]$date_exp, " ")[[1]][3]
strsplit(data[1:50, ]$date_exp, " ")[[1]][3]
years <- lapply(1:nrow(data), function(i) {
temp <- data[i, ]
temp$year <- strsplit(temp$date_exp, " ")[[1]][3]
return(temp)
})
year_list <- lapply(1:nrow(data), function(i) {
temp <- data[i, ]
temp$year <- strsplit(temp$date_exp, " ")[[1]][3]
return(temp)
})
years <- do.call(c, year_list)
data$year <- strsplit(data$date_exp, " ")[[1]][3]
head(years)
temp <- data[1, ]
temp
temp$year <- strsplit(temp$date_exp, " ")[[1]][3]
temp
temp <- data[3, ]
temp$year <- strsplit(temp$date_exp, " ")[[1]][3]
temp
year_list <- lapply(1:nrow(data), function(i) {
temp <- data[3, ]
temp <- strsplit(temp$date_exp, " ")[[1]][3]
return(temp)
})
years <- do.call(c, year_list)
years
year_list <- lapply(1:nrow(data), function(i) {
temp <- data[i, ]
temp <- strsplit(temp$date_exp, " ")[[1]][3]
return(temp)
})
years <- do.call(c, year_list)
years
year_list <- lapply(1:nrow(data), function(i) {
temp <- data[i, ]
temp <- as.numeric(strsplit(temp$date_exp, " ")[[1]][3])
return(temp)
})
years <- do.call(c, year_list)
years
data$years <- do.call(c, year_list)
length(strsplit(data$corp_techs, ";"))
str(strsplit(data$corp_techs, ";"))
str(data$corp_techs)
unique(data$corp_techs)
unique(strsplit(data$corp_techs, ";"))
max(lapply(strsplit(data$corp_techs, ";"), function(split) {
length(split)
}))
max(do.call(c(lapply(strsplit(data$corp_techs, ";"), function(split) {
length(split)
})))
)
lapply(strsplit(data$corp_techs, ";"), function(split) {
length(split)
})
do.call(c, lapply(strsplit(data$corp_techs, ";"), function(split) {
length(split)
}))
max(do.call(c, lapply(strsplit(data$corp_techs, ";"), function(split) {
length(split)
})))
data$years <- do.call(c, year_list)
techs_ind <- lapply(strsplit(data$corp_techs, ";"), function(split) {
splits <- c(split, rep(NA, 11 - length(split)))
data.frame(ct_1 = split[1], ct_2 = split[2], ct_3 = split[3],
ct_4 = split[4], ct_5 = split[5], ct_6 = split[6],
ct_7 = split[7], ct_8 = split[8], ct_9 = split[9],
ct_10 = split[10], ct_11 = split[11])
})
data <- cbind(data, do.call(rbind, techs_ind))
str(data)
head(data)
names(data)
data_melt <- melt(data, id.vars = names(data)[1:10])
head(data)
data[7000, ]
data[7001, ]
data[7041, ]
data[1, ]
str(techs_ind)
str(do.call(rbind, techs_ind)
)
str(data_melt)
str(data$ct_1)
data <- cbind(data, do.call(rbind, techs_ind))
str(data)
names(data)
data <- read.csv("~/vault/to-file/chc-ip-dataset_langer_no-abs.csv", stringsAsFactors = F)
data <- data[, -c(1:4)]
names(data) <- c("date_exp", "corp_techs", "keywords", "tech_list", "invention_field", "invention_subject", "type")
data$date_exp_posix <- as.POSIXct(data$date_exp, format = "%d %b %Y")
temp <- data[data$corp_techs %in% "Abrasives;Microreplication;Ceramics;Advanced Materials", ]
year_list <- lapply(1:nrow(data), function(i) {
temp <- data[i, ]
temp <- as.numeric(strsplit(temp$date_exp, " ")[[1]][3])
return(temp)
})
data$years <- do.call(c, year_list)
techs_ind <- lapply(strsplit(data$corp_techs, ";"), function(split) {
splits <- c(split, rep(NA, 11 - length(split)))
data.frame(ct_1 = split[1], ct_2 = split[2], ct_3 = split[3],
ct_4 = split[4], ct_5 = split[5], ct_6 = split[6],
ct_7 = split[7], ct_8 = split[8], ct_9 = split[9],
ct_10 = split[10], ct_11 = split[11])
})
data_comp <- cbind(data, do.call(rbind, techs_ind))
names(data_comp)
data_melt <- melt(data_comp, id.vars = names(data)[1:9])
techs_ind <- lapply(strsplit(data$corp_techs, ";"), function(split) {
splits <- as.character(c(split, rep(NA, 11 - length(split))))
data.frame(ct_1 = split[1], ct_2 = split[2], ct_3 = split[3],
ct_4 = split[4], ct_5 = split[5], ct_6 = split[6],
ct_7 = split[7], ct_8 = split[8], ct_9 = split[9],
ct_10 = split[10], ct_11 = split[11])
})
data_comp <- cbind(data, do.call(rbind, techs_ind))
str(data_comp)
str(techs_ind[[1]])
techs_ind <- lapply(strsplit(data$corp_techs, ";"), function(split) {
splits <- c(as.character(split, rep(NA, 11 - length(split))))
data.frame(ct_1 = split[1], ct_2 = split[2], ct_3 = split[3],
ct_4 = split[4], ct_5 = split[5], ct_6 = split[6],
ct_7 = split[7], ct_8 = split[8], ct_9 = split[9],
ct_10 = split[10], ct_11 = split[11])
})
str(techs_ind[[1]])
str(as.character(do.call(rbind, techs_ind)))
data_comp <- cbind(data, as.character(do.call(rbind, techs_ind)))
techs_ind_bind <- do.call(rbind, techs_ind)
cols <- lapply(techs_ind_bind, function(col){
as.character(col)
})
str(cols)
cols_bind <- do.call(cbind, cols)
str(cols)
str(cols_bind)
cols_bind <- as.data.frame(do.call(cbind, cols))
str(cols_bind)
cols_bind <- as.data.frame(do.call(cbind, cols), stringsAsFactors = F)
str(cols_bind)
data_comp <- cbind(data, cols_bind)
str(data_comp)
data_melt <- melt(data_comp, id.vars = names(data)[1:9])
head(data_melt)
str(data_melt)
unique(data_melt$value)
names(data_melt)
data_ply <- ddply(data_melt, .(value, year), summarize,
count = length(years))
data_ply <- ddply(data_melt, .(value, years), summarize,
count = length(years))
str(data_ply)
ggplot(data_ply, aes(x = years, y = count, group = value, colour = value)) + geom_line()
unique(data$value)
unique(data_ply$value)
ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = value, colour = value)) + geom_line()
strsplit(data_ply$value, ":")[1:5]
do.call(rbind, strsplit(data_ply$value, ":")[1:5])
do.call(rbind, strsplit(data_ply$value, ":")[1:5])[, 1]
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
str(data_ply))
str(data_ply)
ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = main, colour = main)) + geom_line()
ggplot(data_ply[!is.na(data_ply$value) | data_ply$value != "Other", ], aes(x = years, y = count, group = main, colour = main)) + geom_line()
ggplot(data_ply[!is.na(data_ply$value) & data_ply$value != "Other", ], aes(x = years, y = count, group = main, colour = main)) + geom_line()
data_ply$main <- do.call(rbind, strsplit(data_ply$main, " "))[, 1]
strsplit(data_ply$main, " "))
strsplit(data_ply$main, " ")
data_ply$main <- do.call(rbind, strsplit(data_ply[!is.na(data_ply$main), ]$main, " "))[, 1]
strsplit(data_ply[!is.na(data_ply$main), ]$main, " ")
data_ply[!is.na(data_ply$main, ]$main <- do.call(rbind, strsplit(data_ply[!is.na(data_ply$main), ]$main, " "))[, 1]
data_ply[!is.na(data_ply$main), ]$main <- do.call(rbind, strsplit(data_ply[!is.na(data_ply$main), ]$main, " "))[, 1]
data_ply[!is.na(data_ply$main), ]$main
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
data_ply[!is.na(data_ply$main), ]$main <- do.call(rbind, strsplit(data_ply[!is.na(data_ply$main), ]$main, " "))[, 1]
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
strsplit(data_ply$main, " ")
data_ply$main <- strsplit(data_ply$main, " "))[, 1]
data_ply$main <- strsplit(data_ply$main, " ")[, 1]
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
str(data_ply$main)
str(strsplit(data_ply$main, " "))
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
data_ply$main <- do.call(rbind, strsplit(data_ply$main, " "))[, 1]
str(do.call(rbind, strsplit(data_ply$main, " ")))
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
str(do.call(rbind, strsplit(data_ply$main, " ")))
data_ply$main <- do.call(rbind, strsplit(data_ply$value, ":"))[, 1]
str(do.call(rbind, strsplit(data_ply$main, " ")))
str(strsplit(data_ply$main, " "))
mains <- lapply(strsplit(data_ply$main, " "), function(split){
split[[1]][1]
})
mains
data_ply$main <- do.call(c, lapply(strsplit(data_ply$main, " "), function(split){
split[[1]][1]
}))
data_ply[is.na(data_ply$main), "main"] <- data_ply[is.na(data_ply$main), "value"]
ggplot(data_ply[!is.na(data_ply$main), ], aes(x = years, y = count, group = main, colour = main)) + geom_line()
cols <- lapply(techs_ind_bind, function(col){
as.character(col)
col <- do.call(rbind, strsplit(col, ":"))[, 1]
})
cols <- lapply(techs_ind_bind, function(col){
temp <- as.character(col)
temp <- do.call(rbind, strsplit(temp, ":"))[, 1]
})
cols <- lapply(techs_ind_bind, function(col){
temp <- as.character(col)
temp <- do.call(rbind, strsplit(temp, ":"))[, 1]
return(temp)
})
cols_bind <- as.data.frame(do.call(cbind, cols), stringsAsFactors = F)
data_comp <- cbind(data, cols_bind)
data_melt <- melt(data_comp, id.vars = names(data)[1:9])
data_ply <- ddply(data_melt, .(value, years), summarize,
count = length(years))
ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = value, colour = value)) + geom_line()
p <- ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = value, colour = value)) + geom_line()
p <- p + scale_y_continuous(scale = "log")
p
p <- p + scale_y_continuous(transform = "log")
p <- ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = value, colour = value)) + geom_line()
p <- p + scale_y_continuous(transform = "log")
p
p <- ggplot(data_ply[!is.na(data_ply$value), ], aes(x = years, y = count, group = value, colour = value)) + geom_line()
p <- p + scale_y_continuous(trans = "log")
p
library(rCharts)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1
sessionInfo()
update.packages()
update.packages()
library(rCharts)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1
setwd("/mnt/vault/personal/presentations/devFest-shiny_2015/transpo-rCharts")
library(shiny)
runApp()
library(shiny)
library(rCharts)
data <- read.csv("public-transpo.csv")
data$none <- rep("", nrow(data))
p <- nPlot(population ~ btus_pmile, data = data, type = "scatterChart")
p
p <- nPlot(population ~ btus_pmile, data = data[1:100, c("population", "btus_pmile")], type = "scatterChart")
p
p <- nPlot(population ~ btus_pmile, data = data[1:1000, c("population", "btus_pmile")], type = "scatterChart")
p
p <- nPlot(population ~ btus_pmile, data = data[1:1000, c("mode", "population", "btus_pmile")], group = "mode", type = "scatterChart")
p
p <- nPlot("population" ~ "btus_pmile", data = data[1:1000, c("mode", "population", "btus_pmile")], group = "mode", type = "scatterChart")
p
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document')
setwd("~/Desktop/rchart-shiny")
runApp()
runApp()
nPlot(Sepal.Length ~ Sepal.Width, data = iris, color = "Species", facet = "Species", type = "scatterChart")
runApp()
names(iris) = gsub("\\.", "", names(iris))
head(iris)
nPlot(Sepal.Length ~ Sepal.Width, data = iris, color = "Species", facet = "Species", type = "scatterChart")
nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species", facet = "Species", type = "scatterChart")
runApp()
nPlot("SepalLength" ~ "SepalWidth", data = iris, color = "Species", facet = "Species", type = "scatterChart")
runApp()
runApp()
runApp()
runApp()
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species",
facet = "Species", type = 'scatterChart')
p1
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, group = "Species", color = "Species",
facet = "Species", type = 'scatterChart')
p1
runApp()
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species",
group = "Species", type = 'scatterChart')
p1
library(knitr)
source('~/.active-rstudio-document')
library(rCharts)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight')
p1$print()
opts_chunk$set(results = 'asis', comment = NA, message = F, tidy = F)
require(rCharts)
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
read_chunk('app/ui.R'); read_chunk('app/server.R'); read_chunk('app/global.R')
opts_chunk$set(results = 'asis', comment = NA, message = F, tidy = F)
require(rCharts)
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
require(Lahman)
require(plyr)
install.packages("Lahman")
require(Lahman)
dat = Teams[,c('yearID', 'name', 'G', 'SO')]
team_data = na.omit(transform(dat, SOG = round(SO/G, 2)))
league_data = ddply(team_data, .(yearID), summarize, SOG = mean(SOG))
require(rCharts)
p1 <- rPlot(SOG ~ yearID, data = team_data, type = 'point',
size = list(const = 2), color = list(const = '#888'),
tooltip="function(item){return item.SOG +'\n' + item.name + '\n' + item.yearID}"
)
p1$print('chart1')
opts_chunk$set(results = 'asis', comment = NA, message = F, tidy = F)
require(rCharts)
options(RCHART_WIDTH = 600, RCHART_HEIGHT = 400)
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species",
group = "Species", type = 'scatterChart')
p1
setwd("~/Desktop/rchart-shiny")
runApp()
p1 <- nPlot("SepalLength" ~ "SepalWidth", data = iris, color = "Species",
group = "Species", type = 'scatterChart')
p1
shiny::runApp()
runApp()
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species",
group = "Species", type = 'scatterChart')
p1 <- nPlot(SepalLength ~ SepalWidth, data = iris, color = "Species",
group = "Species", type = 'scatterChart')
p1
setwd("/mnt/vault/personal/presentations/devFest-shiny_2015/transpo-rCharts")
runApp()
runApp()
?nPlot
??nPlot
?rCharts
?rPlot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/vault/personal/presentations/devFest-shiny_2015/transpo-rCharts")
data <- read.csv("public-transpo.csv")
# need a color to use when none is chosen
data$none <- rep("", nrow(data))
data <- read.csv("public-transpo.csv")
# need a color to use when none is chosen
data$none <- rep("", nrow(data))
p <- nPlot(y = input$y, x = input$x, data = data[1:100, ], group = "mode",
type = "scatterChart")
p$addParams(dom = "plot")
p <- nPlot(y = "population", x = "btus_pmile", data = data[1:100, ], group = "mode",
type = "scatterChart")
p$addParams(dom = "plot")
library(rCharts)
p <- nPlot(y = "population", x = "btus_pmile", data = data[1:100, ], group = "mode",
type = "scatterChart")
p$addParams(dom = "plot")
p
p$chart(tickFormat = "#! d3.format('.02f') !#")
p
p$chart(xScale = "#! d3.scale.log() !#")
p
p <- nPlot(y = "population", x = "btus_pmile", data = data[1:100, ], group = "mode",
type = "scatterChart")
p$addParams(dom = "plot")
p$chart(xScale = "#! d3.scale.log() !#")
p
